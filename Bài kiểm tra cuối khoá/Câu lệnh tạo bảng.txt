CREATE DATABASE Techmaster;
USE Techmaster;
CREATE TABLE tbl_roles (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  description VARCHAR(255) NOT NULL,
  name VARCHAR(255) NOT NULL,
  status INTEGER NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL
);
CREATE TABLE tbl_user (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  phone VARCHAR(20) NOT NULL UNIQUE,
  adress VARCHAR(255) NOT NULL,
  username VARCHAR(255) NOT NULL,
  password1 VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  dateOfBirth TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  role_id INT NOT NULL,
  status1 INT NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_user_role_id FOREIGN KEY (role_id) REFERENCES tbl_role(id)
);
CREATE TABLE tbl_classes (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  teacher_id INTEGER NOT NULL,
  className VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL,
  status INTEGER NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_classes_teacher_id FOREIGN KEY (teacher_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_courses (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  class_id INTEGER NOT NULL,
  courseName VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL,
  status INTEGER NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_courses_class_id FOREIGN KEY (class_id) REFERENCES tbl_classes(id)
);

CREATE TABLE tbl_managers_user (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  admin_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL,
  status VARCHAR(255) NOT NULL,  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_admin_id FOREIGN KEY (admin_id) REFERENCES tbl_user(id),
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_managers_class_courses (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  admin_id INTEGER NOT NULL,
  class_id INTEGER NOT NULL,
  course_id INTEGER NOT NULL,
  status VARCHAR(255) NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_admin_id FOREIGN KEY (admin_id) REFERENCES tbl_user(id),
  CONSTRAINT fk_class_id FOREIGN KEY (class_id) REFERENCES tbl_classes(id),
  CONSTRAINT fk_course_id FOREIGN KEY (course_id) REFERENCES tbl_courses(id)
);

CREATE TABLE tbl_teachers_addCourses (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  teacher_id INTEGER NOT NULL,
  course_id INTEGER NOT NULL,
  class_id INTEGER NOT NULL,
  date TIMESTAMP,
  status VARCHAR(255) NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_teachers_Courses_course_id FOREIGN KEY (course_id) REFERENCES tbl_courses(id),
  CONSTRAINT fk_teachers_Courses_class_id FOREIGN KEY (class_id) REFERENCES tbl_classes(id),
  CONSTRAINT fk_teachers_Courses_teacher_id FOREIGN KEY (teacher_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_students_attendance (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  student_id INTEGER NOT NULL,
  teacher_id INTEGER NOT NULL,
  course_id INTEGER NOT NULL,
  class_id INTEGER NOT NULL,
  date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  status INTEGER NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_students_attendance_course_id FOREIGN KEY (course_id) REFERENCES tbl_courses(id),
  CONSTRAINT fk_students_attendance_class_id FOREIGN KEY (class_id) REFERENCES tbl_classes(id),
  CONSTRAINT fk_students_attendance_student_id FOREIGN KEY (student_id) REFERENCES tbl_user(id),
  CONSTRAINT fk_students_attendance_teacher_id FOREIGN KEY (teacher_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_students_score (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  student_id INTEGER NOT NULL,
  teacher_id INTEGER NOT NULL,
  course_id INTEGER NOT NULL,
  class_id INTEGER NOT NULL,
  score INTEGER NOT NULL,
  status INTEGER NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_students_score_course_id FOREIGN KEY (course_id) REFERENCES tbl_courses(id),
  CONSTRAINT fk_students_score_class_id FOREIGN KEY (class_id) REFERENCES tbl_classes(id),
  CONSTRAINT fk_students_score_student_id FOREIGN KEY (student_id) REFERENCES tbl_user(id),
  CONSTRAINT fk_students_score_teacher_id FOREIGN KEY (teacher_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_post (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  content VARCHAR(255) ,
  user_id INTEGER NOT NULL,
  status VARCHAR(255),
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_post_user_id FOREIGN KEY (user_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_comment (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  post_id INTEGER NOT NULL,
  content VARCHAR(255) ,
  status VARCHAR(255) NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_comment_post_id FOREIGN KEY (post_id) REFERENCES tbl_post(id)
);

CREATE TABLE tbl_image (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  status VARCHAR(255) NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL
);

CREATE TABLE tbl_like (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  status VARCHAR(255) NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_like_user_id FOREIGN KEY (user_id) REFERENCES tbl_user(id)
);

CREATE TABLE tbl_like_posts_comments (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  type VARCHAR(255) NOT NULL,
  type_id INTEGER NOT NULL,
  status VARCHAR(255) NOT NULL,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_like_posts_comments_post_id FOREIGN KEY (type_id) REFERENCES tbl_post(id),
  CONSTRAINT fk_like_posts_comments_comment_id FOREIGN KEY (type_id) REFERENCES tbl_comment(id)
);

CREATE TABLE tbl_image_posts_comments (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  image_id INTEGER NOT NULL,
  type VARCHAR(255) NOT NULL,
  type_id INTEGER NOT NULL,
  status VARCHAR(255) ,
  created_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  deleted_at  TIMESTAMP NULL DEFAULT NULL,
  CONSTRAINT fk_image_posts_comments_post_id FOREIGN KEY (type_id) REFERENCES tbl_post(id),
  CONSTRAINT fk_image_posts_comments_comment_id FOREIGN KEY (type_id) REFERENCES tbl_comment(id) ,
  CONSTRAINT fk_image_posts_comments_image_id FOREIGN KEY (image_id) REFERENCES tbl_image(id)
);

 
